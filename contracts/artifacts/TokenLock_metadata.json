{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "releaseTime",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "ownable",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "Retrieve",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "UnLock",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "beneficiaryAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwnable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lockToken",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ownerAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "release",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "releaseTimeTo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "retrieve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"beneficiaryAddress()": {
					"returns": {
						"_0": "the beneficiary of the tokens."
					}
				},
				"isOwnable()": {
					"returns": {
						"_0": "if this contract can be controlled by generator(owner)"
					}
				},
				"lockToken()": {
					"returns": {
						"_0": "the token being held."
					}
				},
				"releaseTimeTo()": {
					"returns": {
						"_0": "the time when the tokens are released."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"release()": {
					"notice": "Transfers tokens held by timelock to beneficiary."
				},
				"retrieve()": {
					"notice": "Retrieve tokens held by timelock to generator(owner)."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TokenLock.sol": "TokenLock"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/TokenLock.sol": {
			"keccak256": "0xa9148b780e256a5cf5b57cd28c819059f076b42d05e58e610c3e8e1941aaa566",
			"license": "MIT",
			"urls": [
				"bzz-raw://20808a3f2041e0ecb59a14b99148336cc5c8b66c2cca851478a612472dea93d3",
				"dweb:/ipfs/QmQKBt24niSVMt4mH9NB6P5V8C4Typm5VWMB1DTUdTrmPV"
			]
		},
		"erc20/IERC20.sol": {
			"keccak256": "0xd4c88d47910212b27fdcc7eaf58438b71a0dec09df65ed659505f20e70ff404f",
			"license": "MIT",
			"urls": [
				"bzz-raw://97eb495cf5874cc98859c7dc62c34322b8e952eb9c4a8e7dcf601749344cc576",
				"dweb:/ipfs/QmbQUeqQuDy2qQKgEfvimhSYbJkkX7yGLv2bnAZd8Dzm1L"
			]
		},
		"utils/Address.sol": {
			"keccak256": "0xb9b91a50da6fbcd6de774fe4b4f507ddf42f8994fb447584c6880c10bd012b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7c5b4ba82ddf84cbf6e13702f4fe4a92d198f8f977d03cc31f60f854cfb648d",
				"dweb:/ipfs/QmNS99RUtZhjwzKucJUpLtARHMkr9pZ67uQN3fNbXf5pkS"
			]
		},
		"utils/SafeERC20.sol": {
			"keccak256": "0xc913e3f03b4c5f087cf1de3b55cf7313860ca86525cba210e73b793fd38e200f",
			"license": "MIT",
			"urls": [
				"bzz-raw://4298e880807e594ff6a901ce28ed57908c58b85fd9aa2976e80ca830ba65cf08",
				"dweb:/ipfs/QmUDkr2n3M68QFAcjdaEGZ77iekkGsaS6Ejka13cpZN2Kq"
			]
		}
	},
	"version": 1
}